// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sundial.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_sundial_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_sundial_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sundial_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sundial_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_sundial_2eproto;
namespace sundial_rpc {
class SundialRequest;
struct SundialRequestDefaultTypeInternal;
extern SundialRequestDefaultTypeInternal _SundialRequest_default_instance_;
class SundialRequest_NodeData;
struct SundialRequest_NodeDataDefaultTypeInternal;
extern SundialRequest_NodeDataDefaultTypeInternal _SundialRequest_NodeData_default_instance_;
class SundialRequest_ReadRequest;
struct SundialRequest_ReadRequestDefaultTypeInternal;
extern SundialRequest_ReadRequestDefaultTypeInternal _SundialRequest_ReadRequest_default_instance_;
class SundialRequest_TupleData;
struct SundialRequest_TupleDataDefaultTypeInternal;
extern SundialRequest_TupleDataDefaultTypeInternal _SundialRequest_TupleData_default_instance_;
class SundialResponse;
struct SundialResponseDefaultTypeInternal;
extern SundialResponseDefaultTypeInternal _SundialResponse_default_instance_;
class SundialResponse_TupleData;
struct SundialResponse_TupleDataDefaultTypeInternal;
extern SundialResponse_TupleDataDefaultTypeInternal _SundialResponse_TupleData_default_instance_;
}  // namespace sundial_rpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sundial_rpc {
enum SundialRequest_RequestType : int {
  SundialRequest_RequestType_DummyReply = 0,
  SundialRequest_RequestType_READ_REQ = 1,
  SundialRequest_RequestType_PREPARE_REQ = 2,
  SundialRequest_RequestType_COMMIT_REQ = 3,
  SundialRequest_RequestType_ABORT_REQ = 4,
  SundialRequest_RequestType_SYS_REQ = 5,
  SundialRequest_RequestType_TERMINATE_REQ = 6,
  SundialRequest_RequestType_PAXOS_LOG = 7,
  SundialRequest_RequestType_PAXOS_LOG_FORWARD = 8,
  SundialRequest_RequestType_PAXOS_LOG_COLOCATE = 9,
  SundialRequest_RequestType_PAXOS_LOG_COLOCATE_FORWARD = 10,
  SundialRequest_RequestType_PAXOS_REPLICATE = 11,
  SundialRequest_RequestType_NUM_REQ_TYPES = 12,
  SundialRequest_RequestType_SundialRequest_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialRequest_RequestType_SundialRequest_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialRequest_RequestType_IsValid(int value);
extern const uint32_t SundialRequest_RequestType_internal_data_[];
constexpr SundialRequest_RequestType SundialRequest_RequestType_RequestType_MIN = static_cast<SundialRequest_RequestType>(0);
constexpr SundialRequest_RequestType SundialRequest_RequestType_RequestType_MAX = static_cast<SundialRequest_RequestType>(12);
constexpr int SundialRequest_RequestType_RequestType_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor*
SundialRequest_RequestType_descriptor();
template <typename T>
const std::string& SundialRequest_RequestType_Name(T value) {
  static_assert(std::is_same<T, SundialRequest_RequestType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RequestType_Name().");
  return SundialRequest_RequestType_Name(static_cast<SundialRequest_RequestType>(value));
}
template <>
inline const std::string& SundialRequest_RequestType_Name(SundialRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialRequest_RequestType_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool SundialRequest_RequestType_Parse(absl::string_view name, SundialRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialRequest_RequestType>(
      SundialRequest_RequestType_descriptor(), name, value);
}
enum SundialRequest_NodeType : int {
  SundialRequest_NodeType_COORDINATOR = 0,
  SundialRequest_NodeType_PARTICIPANT = 1,
  SundialRequest_NodeType_STORAGE = 2,
  SundialRequest_NodeType_SundialRequest_NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialRequest_NodeType_SundialRequest_NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialRequest_NodeType_IsValid(int value);
extern const uint32_t SundialRequest_NodeType_internal_data_[];
constexpr SundialRequest_NodeType SundialRequest_NodeType_NodeType_MIN = static_cast<SundialRequest_NodeType>(0);
constexpr SundialRequest_NodeType SundialRequest_NodeType_NodeType_MAX = static_cast<SundialRequest_NodeType>(2);
constexpr int SundialRequest_NodeType_NodeType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SundialRequest_NodeType_descriptor();
template <typename T>
const std::string& SundialRequest_NodeType_Name(T value) {
  static_assert(std::is_same<T, SundialRequest_NodeType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NodeType_Name().");
  return SundialRequest_NodeType_Name(static_cast<SundialRequest_NodeType>(value));
}
template <>
inline const std::string& SundialRequest_NodeType_Name(SundialRequest_NodeType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialRequest_NodeType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SundialRequest_NodeType_Parse(absl::string_view name, SundialRequest_NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialRequest_NodeType>(
      SundialRequest_NodeType_descriptor(), name, value);
}
enum SundialRequest_ResponseType : int {
  SundialRequest_ResponseType_RESP_OK = 0,
  SundialRequest_ResponseType_RESP_ABORT = 1,
  SundialRequest_ResponseType_RESP_FAIL = 2,
  SundialRequest_ResponseType_PREPARED_OK = 3,
  SundialRequest_ResponseType_PREPARED_OK_RO = 4,
  SundialRequest_ResponseType_PREPARED_ABORT = 5,
  SundialRequest_ResponseType_ACK = 6,
  SundialRequest_ResponseType_SYS_RESP = 7,
  SundialRequest_ResponseType_NUM_RESP_TYPES = 8,
  SundialRequest_ResponseType_SundialRequest_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialRequest_ResponseType_SundialRequest_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialRequest_ResponseType_IsValid(int value);
extern const uint32_t SundialRequest_ResponseType_internal_data_[];
constexpr SundialRequest_ResponseType SundialRequest_ResponseType_ResponseType_MIN = static_cast<SundialRequest_ResponseType>(0);
constexpr SundialRequest_ResponseType SundialRequest_ResponseType_ResponseType_MAX = static_cast<SundialRequest_ResponseType>(8);
constexpr int SundialRequest_ResponseType_ResponseType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
SundialRequest_ResponseType_descriptor();
template <typename T>
const std::string& SundialRequest_ResponseType_Name(T value) {
  static_assert(std::is_same<T, SundialRequest_ResponseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResponseType_Name().");
  return SundialRequest_ResponseType_Name(static_cast<SundialRequest_ResponseType>(value));
}
template <>
inline const std::string& SundialRequest_ResponseType_Name(SundialRequest_ResponseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialRequest_ResponseType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool SundialRequest_ResponseType_Parse(absl::string_view name, SundialRequest_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialRequest_ResponseType>(
      SundialRequest_ResponseType_descriptor(), name, value);
}
enum SundialResponse_RequestType : int {
  SundialResponse_RequestType_DummyReply = 0,
  SundialResponse_RequestType_READ_REQ = 1,
  SundialResponse_RequestType_PREPARE_REQ = 2,
  SundialResponse_RequestType_COMMIT_REQ = 3,
  SundialResponse_RequestType_ABORT_REQ = 4,
  SundialResponse_RequestType_SYS_REQ = 5,
  SundialResponse_RequestType_TERMINATE_REQ = 6,
  SundialResponse_RequestType_PAXOS_LOG_ACK = 7,
  SundialResponse_RequestType_PAXOS_FORWARD_ACK = 8,
  SundialResponse_RequestType_NUM_REQ_TYPES = 9,
  SundialResponse_RequestType_SundialResponse_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialResponse_RequestType_SundialResponse_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialResponse_RequestType_IsValid(int value);
extern const uint32_t SundialResponse_RequestType_internal_data_[];
constexpr SundialResponse_RequestType SundialResponse_RequestType_RequestType_MIN = static_cast<SundialResponse_RequestType>(0);
constexpr SundialResponse_RequestType SundialResponse_RequestType_RequestType_MAX = static_cast<SundialResponse_RequestType>(9);
constexpr int SundialResponse_RequestType_RequestType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
SundialResponse_RequestType_descriptor();
template <typename T>
const std::string& SundialResponse_RequestType_Name(T value) {
  static_assert(std::is_same<T, SundialResponse_RequestType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RequestType_Name().");
  return SundialResponse_RequestType_Name(static_cast<SundialResponse_RequestType>(value));
}
template <>
inline const std::string& SundialResponse_RequestType_Name(SundialResponse_RequestType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialResponse_RequestType_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool SundialResponse_RequestType_Parse(absl::string_view name, SundialResponse_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialResponse_RequestType>(
      SundialResponse_RequestType_descriptor(), name, value);
}
enum SundialResponse_ResponseType : int {
  SundialResponse_ResponseType_RESP_OK = 0,
  SundialResponse_ResponseType_RESP_ABORT = 1,
  SundialResponse_ResponseType_RESP_FAIL = 2,
  SundialResponse_ResponseType_PREPARED_OK = 3,
  SundialResponse_ResponseType_PREPARED_OK_RO = 4,
  SundialResponse_ResponseType_PREPARED_ABORT = 5,
  SundialResponse_ResponseType_ACK = 6,
  SundialResponse_ResponseType_SYS_RESP = 7,
  SundialResponse_ResponseType_NUM_RESP_TYPES = 8,
  SundialResponse_ResponseType_SundialResponse_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialResponse_ResponseType_SundialResponse_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialResponse_ResponseType_IsValid(int value);
extern const uint32_t SundialResponse_ResponseType_internal_data_[];
constexpr SundialResponse_ResponseType SundialResponse_ResponseType_ResponseType_MIN = static_cast<SundialResponse_ResponseType>(0);
constexpr SundialResponse_ResponseType SundialResponse_ResponseType_ResponseType_MAX = static_cast<SundialResponse_ResponseType>(8);
constexpr int SundialResponse_ResponseType_ResponseType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
SundialResponse_ResponseType_descriptor();
template <typename T>
const std::string& SundialResponse_ResponseType_Name(T value) {
  static_assert(std::is_same<T, SundialResponse_ResponseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResponseType_Name().");
  return SundialResponse_ResponseType_Name(static_cast<SundialResponse_ResponseType>(value));
}
template <>
inline const std::string& SundialResponse_ResponseType_Name(SundialResponse_ResponseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialResponse_ResponseType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool SundialResponse_ResponseType_Parse(absl::string_view name, SundialResponse_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialResponse_ResponseType>(
      SundialResponse_ResponseType_descriptor(), name, value);
}
enum SundialResponse_NodeType : int {
  SundialResponse_NodeType_COORDINATOR = 0,
  SundialResponse_NodeType_PARTICIPANT = 1,
  SundialResponse_NodeType_STORAGE = 2,
  SundialResponse_NodeType_SundialResponse_NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SundialResponse_NodeType_SundialResponse_NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SundialResponse_NodeType_IsValid(int value);
extern const uint32_t SundialResponse_NodeType_internal_data_[];
constexpr SundialResponse_NodeType SundialResponse_NodeType_NodeType_MIN = static_cast<SundialResponse_NodeType>(0);
constexpr SundialResponse_NodeType SundialResponse_NodeType_NodeType_MAX = static_cast<SundialResponse_NodeType>(2);
constexpr int SundialResponse_NodeType_NodeType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SundialResponse_NodeType_descriptor();
template <typename T>
const std::string& SundialResponse_NodeType_Name(T value) {
  static_assert(std::is_same<T, SundialResponse_NodeType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NodeType_Name().");
  return SundialResponse_NodeType_Name(static_cast<SundialResponse_NodeType>(value));
}
template <>
inline const std::string& SundialResponse_NodeType_Name(SundialResponse_NodeType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SundialResponse_NodeType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SundialResponse_NodeType_Parse(absl::string_view name, SundialResponse_NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SundialResponse_NodeType>(
      SundialResponse_NodeType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SundialResponse_TupleData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialResponse.TupleData) */ {
 public:
  inline SundialResponse_TupleData() : SundialResponse_TupleData(nullptr) {}
  ~SundialResponse_TupleData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialResponse_TupleData(::google::protobuf::internal::ConstantInitialized);

  inline SundialResponse_TupleData(const SundialResponse_TupleData& from)
      : SundialResponse_TupleData(nullptr, from) {}
  SundialResponse_TupleData(SundialResponse_TupleData&& from) noexcept
    : SundialResponse_TupleData() {
    *this = ::std::move(from);
  }

  inline SundialResponse_TupleData& operator=(const SundialResponse_TupleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialResponse_TupleData& operator=(SundialResponse_TupleData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialResponse_TupleData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialResponse_TupleData* internal_default_instance() {
    return reinterpret_cast<const SundialResponse_TupleData*>(
               &_SundialResponse_TupleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SundialResponse_TupleData& a, SundialResponse_TupleData& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialResponse_TupleData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialResponse_TupleData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialResponse_TupleData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialResponse_TupleData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialResponse_TupleData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialResponse_TupleData& from) {
    SundialResponse_TupleData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialResponse_TupleData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialResponse.TupleData";
  }
  protected:
  explicit SundialResponse_TupleData(::google::protobuf::Arena* arena);
  SundialResponse_TupleData(::google::protobuf::Arena* arena, const SundialResponse_TupleData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kKeyFieldNumber = 1,
    kTableIdFieldNumber = 2,
    kSizeFieldNumber = 3,
    kAccessTypeFieldNumber = 5,
    kVersionFieldNumber = 6,
    kIndexIdFieldNumber = 7,
  };
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 key = 1;
  void clear_key() ;
  ::uint64_t key() const;
  void set_key(::uint64_t value);

  private:
  ::uint64_t _internal_key() const;
  void _internal_set_key(::uint64_t value);

  public:
  // uint64 table_id = 2;
  void clear_table_id() ;
  ::uint64_t table_id() const;
  void set_table_id(::uint64_t value);

  private:
  ::uint64_t _internal_table_id() const;
  void _internal_set_table_id(::uint64_t value);

  public:
  // uint64 size = 3;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint64 access_type = 5;
  void clear_access_type() ;
  ::uint64_t access_type() const;
  void set_access_type(::uint64_t value);

  private:
  ::uint64_t _internal_access_type() const;
  void _internal_set_access_type(::uint64_t value);

  public:
  // uint64 version = 6;
  void clear_version() ;
  ::uint64_t version() const;
  void set_version(::uint64_t value);

  private:
  ::uint64_t _internal_version() const;
  void _internal_set_version(::uint64_t value);

  public:
  // uint64 index_id = 7;
  void clear_index_id() ;
  ::uint64_t index_id() const;
  void set_index_id(::uint64_t value);

  private:
  ::uint64_t _internal_index_id() const;
  void _internal_set_index_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialResponse.TupleData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t key_;
    ::uint64_t table_id_;
    ::uint64_t size_;
    ::uint64_t access_type_;
    ::uint64_t version_;
    ::uint64_t index_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};// -------------------------------------------------------------------

class SundialRequest_TupleData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialRequest.TupleData) */ {
 public:
  inline SundialRequest_TupleData() : SundialRequest_TupleData(nullptr) {}
  ~SundialRequest_TupleData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialRequest_TupleData(::google::protobuf::internal::ConstantInitialized);

  inline SundialRequest_TupleData(const SundialRequest_TupleData& from)
      : SundialRequest_TupleData(nullptr, from) {}
  SundialRequest_TupleData(SundialRequest_TupleData&& from) noexcept
    : SundialRequest_TupleData() {
    *this = ::std::move(from);
  }

  inline SundialRequest_TupleData& operator=(const SundialRequest_TupleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialRequest_TupleData& operator=(SundialRequest_TupleData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialRequest_TupleData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialRequest_TupleData* internal_default_instance() {
    return reinterpret_cast<const SundialRequest_TupleData*>(
               &_SundialRequest_TupleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SundialRequest_TupleData& a, SundialRequest_TupleData& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialRequest_TupleData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialRequest_TupleData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialRequest_TupleData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialRequest_TupleData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialRequest_TupleData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialRequest_TupleData& from) {
    SundialRequest_TupleData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialRequest_TupleData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialRequest.TupleData";
  }
  protected:
  explicit SundialRequest_TupleData(::google::protobuf::Arena* arena);
  SundialRequest_TupleData(::google::protobuf::Arena* arena, const SundialRequest_TupleData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kKeyFieldNumber = 1,
    kTableIdFieldNumber = 2,
    kSizeFieldNumber = 3,
    kAccessTypeFieldNumber = 5,
    kVersionFieldNumber = 6,
    kIndexIdFieldNumber = 7,
  };
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 key = 1;
  void clear_key() ;
  ::uint64_t key() const;
  void set_key(::uint64_t value);

  private:
  ::uint64_t _internal_key() const;
  void _internal_set_key(::uint64_t value);

  public:
  // uint64 table_id = 2;
  void clear_table_id() ;
  ::uint64_t table_id() const;
  void set_table_id(::uint64_t value);

  private:
  ::uint64_t _internal_table_id() const;
  void _internal_set_table_id(::uint64_t value);

  public:
  // uint64 size = 3;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint64 access_type = 5;
  void clear_access_type() ;
  ::uint64_t access_type() const;
  void set_access_type(::uint64_t value);

  private:
  ::uint64_t _internal_access_type() const;
  void _internal_set_access_type(::uint64_t value);

  public:
  // uint64 version = 6;
  void clear_version() ;
  ::uint64_t version() const;
  void set_version(::uint64_t value);

  private:
  ::uint64_t _internal_version() const;
  void _internal_set_version(::uint64_t value);

  public:
  // uint64 index_id = 7;
  void clear_index_id() ;
  ::uint64_t index_id() const;
  void set_index_id(::uint64_t value);

  private:
  ::uint64_t _internal_index_id() const;
  void _internal_set_index_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialRequest.TupleData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t key_;
    ::uint64_t table_id_;
    ::uint64_t size_;
    ::uint64_t access_type_;
    ::uint64_t version_;
    ::uint64_t index_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};// -------------------------------------------------------------------

class SundialRequest_ReadRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialRequest.ReadRequest) */ {
 public:
  inline SundialRequest_ReadRequest() : SundialRequest_ReadRequest(nullptr) {}
  ~SundialRequest_ReadRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialRequest_ReadRequest(::google::protobuf::internal::ConstantInitialized);

  inline SundialRequest_ReadRequest(const SundialRequest_ReadRequest& from)
      : SundialRequest_ReadRequest(nullptr, from) {}
  SundialRequest_ReadRequest(SundialRequest_ReadRequest&& from) noexcept
    : SundialRequest_ReadRequest() {
    *this = ::std::move(from);
  }

  inline SundialRequest_ReadRequest& operator=(const SundialRequest_ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialRequest_ReadRequest& operator=(SundialRequest_ReadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialRequest_ReadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialRequest_ReadRequest* internal_default_instance() {
    return reinterpret_cast<const SundialRequest_ReadRequest*>(
               &_SundialRequest_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SundialRequest_ReadRequest& a, SundialRequest_ReadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialRequest_ReadRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialRequest_ReadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialRequest_ReadRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialRequest_ReadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialRequest_ReadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialRequest_ReadRequest& from) {
    SundialRequest_ReadRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialRequest_ReadRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialRequest.ReadRequest";
  }
  protected:
  explicit SundialRequest_ReadRequest(::google::protobuf::Arena* arena);
  SundialRequest_ReadRequest(::google::protobuf::Arena* arena, const SundialRequest_ReadRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kIndexIdFieldNumber = 2,
    kAccessTypeFieldNumber = 3,
  };
  // uint64 key = 1;
  void clear_key() ;
  ::uint64_t key() const;
  void set_key(::uint64_t value);

  private:
  ::uint64_t _internal_key() const;
  void _internal_set_key(::uint64_t value);

  public:
  // uint64 index_id = 2;
  void clear_index_id() ;
  ::uint64_t index_id() const;
  void set_index_id(::uint64_t value);

  private:
  ::uint64_t _internal_index_id() const;
  void _internal_set_index_id(::uint64_t value);

  public:
  // uint64 access_type = 3;
  void clear_access_type() ;
  ::uint64_t access_type() const;
  void set_access_type(::uint64_t value);

  private:
  ::uint64_t _internal_access_type() const;
  void _internal_set_access_type(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialRequest.ReadRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t key_;
    ::uint64_t index_id_;
    ::uint64_t access_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};// -------------------------------------------------------------------

class SundialRequest_NodeData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialRequest.NodeData) */ {
 public:
  inline SundialRequest_NodeData() : SundialRequest_NodeData(nullptr) {}
  ~SundialRequest_NodeData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialRequest_NodeData(::google::protobuf::internal::ConstantInitialized);

  inline SundialRequest_NodeData(const SundialRequest_NodeData& from)
      : SundialRequest_NodeData(nullptr, from) {}
  SundialRequest_NodeData(SundialRequest_NodeData&& from) noexcept
    : SundialRequest_NodeData() {
    *this = ::std::move(from);
  }

  inline SundialRequest_NodeData& operator=(const SundialRequest_NodeData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialRequest_NodeData& operator=(SundialRequest_NodeData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialRequest_NodeData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialRequest_NodeData* internal_default_instance() {
    return reinterpret_cast<const SundialRequest_NodeData*>(
               &_SundialRequest_NodeData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SundialRequest_NodeData& a, SundialRequest_NodeData& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialRequest_NodeData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialRequest_NodeData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialRequest_NodeData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialRequest_NodeData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialRequest_NodeData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialRequest_NodeData& from) {
    SundialRequest_NodeData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialRequest_NodeData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialRequest.NodeData";
  }
  protected:
  explicit SundialRequest_NodeData(::google::protobuf::Arena* arena);
  SundialRequest_NodeData(::google::protobuf::Arena* arena, const SundialRequest_NodeData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNidFieldNumber = 1,
  };
  // uint64 nid = 1;
  void clear_nid() ;
  ::uint64_t nid() const;
  void set_nid(::uint64_t value);

  private:
  ::uint64_t _internal_nid() const;
  void _internal_set_nid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialRequest.NodeData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t nid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};// -------------------------------------------------------------------

class SundialResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialResponse) */ {
 public:
  inline SundialResponse() : SundialResponse(nullptr) {}
  ~SundialResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialResponse(::google::protobuf::internal::ConstantInitialized);

  inline SundialResponse(const SundialResponse& from)
      : SundialResponse(nullptr, from) {}
  SundialResponse(SundialResponse&& from) noexcept
    : SundialResponse() {
    *this = ::std::move(from);
  }

  inline SundialResponse& operator=(const SundialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialResponse& operator=(SundialResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialResponse* internal_default_instance() {
    return reinterpret_cast<const SundialResponse*>(
               &_SundialResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SundialResponse& a, SundialResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialResponse& from) {
    SundialResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialResponse";
  }
  protected:
  explicit SundialResponse(::google::protobuf::Arena* arena);
  SundialResponse(::google::protobuf::Arena* arena, const SundialResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using TupleData = SundialResponse_TupleData;

  using RequestType = SundialResponse_RequestType;
  static constexpr RequestType DummyReply = SundialResponse_RequestType_DummyReply;
  static constexpr RequestType READ_REQ = SundialResponse_RequestType_READ_REQ;
  static constexpr RequestType PREPARE_REQ = SundialResponse_RequestType_PREPARE_REQ;
  static constexpr RequestType COMMIT_REQ = SundialResponse_RequestType_COMMIT_REQ;
  static constexpr RequestType ABORT_REQ = SundialResponse_RequestType_ABORT_REQ;
  static constexpr RequestType SYS_REQ = SundialResponse_RequestType_SYS_REQ;
  static constexpr RequestType TERMINATE_REQ = SundialResponse_RequestType_TERMINATE_REQ;
  static constexpr RequestType PAXOS_LOG_ACK = SundialResponse_RequestType_PAXOS_LOG_ACK;
  static constexpr RequestType PAXOS_FORWARD_ACK = SundialResponse_RequestType_PAXOS_FORWARD_ACK;
  static constexpr RequestType NUM_REQ_TYPES = SundialResponse_RequestType_NUM_REQ_TYPES;
  static inline bool RequestType_IsValid(int value) {
    return SundialResponse_RequestType_IsValid(value);
  }
  static constexpr RequestType RequestType_MIN = SundialResponse_RequestType_RequestType_MIN;
  static constexpr RequestType RequestType_MAX = SundialResponse_RequestType_RequestType_MAX;
  static constexpr int RequestType_ARRAYSIZE = SundialResponse_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
    return SundialResponse_RequestType_descriptor();
  }
  template <typename T>
  static inline const std::string& RequestType_Name(T value) {
    return SundialResponse_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(absl::string_view name, RequestType* value) {
    return SundialResponse_RequestType_Parse(name, value);
  }

  using ResponseType = SundialResponse_ResponseType;
  static constexpr ResponseType RESP_OK = SundialResponse_ResponseType_RESP_OK;
  static constexpr ResponseType RESP_ABORT = SundialResponse_ResponseType_RESP_ABORT;
  static constexpr ResponseType RESP_FAIL = SundialResponse_ResponseType_RESP_FAIL;
  static constexpr ResponseType PREPARED_OK = SundialResponse_ResponseType_PREPARED_OK;
  static constexpr ResponseType PREPARED_OK_RO = SundialResponse_ResponseType_PREPARED_OK_RO;
  static constexpr ResponseType PREPARED_ABORT = SundialResponse_ResponseType_PREPARED_ABORT;
  static constexpr ResponseType ACK = SundialResponse_ResponseType_ACK;
  static constexpr ResponseType SYS_RESP = SundialResponse_ResponseType_SYS_RESP;
  static constexpr ResponseType NUM_RESP_TYPES = SundialResponse_ResponseType_NUM_RESP_TYPES;
  static inline bool ResponseType_IsValid(int value) {
    return SundialResponse_ResponseType_IsValid(value);
  }
  static constexpr ResponseType ResponseType_MIN = SundialResponse_ResponseType_ResponseType_MIN;
  static constexpr ResponseType ResponseType_MAX = SundialResponse_ResponseType_ResponseType_MAX;
  static constexpr int ResponseType_ARRAYSIZE = SundialResponse_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ResponseType_descriptor() {
    return SundialResponse_ResponseType_descriptor();
  }
  template <typename T>
  static inline const std::string& ResponseType_Name(T value) {
    return SundialResponse_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(absl::string_view name, ResponseType* value) {
    return SundialResponse_ResponseType_Parse(name, value);
  }

  using NodeType = SundialResponse_NodeType;
  static constexpr NodeType COORDINATOR = SundialResponse_NodeType_COORDINATOR;
  static constexpr NodeType PARTICIPANT = SundialResponse_NodeType_PARTICIPANT;
  static constexpr NodeType STORAGE = SundialResponse_NodeType_STORAGE;
  static inline bool NodeType_IsValid(int value) {
    return SundialResponse_NodeType_IsValid(value);
  }
  static constexpr NodeType NodeType_MIN = SundialResponse_NodeType_NodeType_MIN;
  static constexpr NodeType NodeType_MAX = SundialResponse_NodeType_NodeType_MAX;
  static constexpr int NodeType_ARRAYSIZE = SundialResponse_NodeType_NodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NodeType_descriptor() {
    return SundialResponse_NodeType_descriptor();
  }
  template <typename T>
  static inline const std::string& NodeType_Name(T value) {
    return SundialResponse_NodeType_Name(value);
  }
  static inline bool NodeType_Parse(absl::string_view name, NodeType* value) {
    return SundialResponse_NodeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTupleDataFieldNumber = 3,
    kTxnIdFieldNumber = 1,
    kResponseTypeFieldNumber = 2,
    kRequestTypeFieldNumber = 5,
    kNodeIdFieldNumber = 4,
    kThdIdFieldNumber = 6,
    kNodeTypeFieldNumber = 7,
  };
  // repeated .sundial_rpc.SundialResponse.TupleData tuple_data = 3;
  int tuple_data_size() const;
  private:
  int _internal_tuple_data_size() const;

  public:
  void clear_tuple_data() ;
  ::sundial_rpc::SundialResponse_TupleData* mutable_tuple_data(int index);
  ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialResponse_TupleData >*
      mutable_tuple_data();
  private:
  const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>& _internal_tuple_data() const;
  ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>* _internal_mutable_tuple_data();
  public:
  const ::sundial_rpc::SundialResponse_TupleData& tuple_data(int index) const;
  ::sundial_rpc::SundialResponse_TupleData* add_tuple_data();
  const ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialResponse_TupleData >&
      tuple_data() const;
  // uint64 txn_id = 1;
  void clear_txn_id() ;
  ::uint64_t txn_id() const;
  void set_txn_id(::uint64_t value);

  private:
  ::uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(::uint64_t value);

  public:
  // .sundial_rpc.SundialResponse.ResponseType response_type = 2;
  void clear_response_type() ;
  ::sundial_rpc::SundialResponse_ResponseType response_type() const;
  void set_response_type(::sundial_rpc::SundialResponse_ResponseType value);

  private:
  ::sundial_rpc::SundialResponse_ResponseType _internal_response_type() const;
  void _internal_set_response_type(::sundial_rpc::SundialResponse_ResponseType value);

  public:
  // .sundial_rpc.SundialResponse.RequestType request_type = 5;
  void clear_request_type() ;
  ::sundial_rpc::SundialResponse_RequestType request_type() const;
  void set_request_type(::sundial_rpc::SundialResponse_RequestType value);

  private:
  ::sundial_rpc::SundialResponse_RequestType _internal_request_type() const;
  void _internal_set_request_type(::sundial_rpc::SundialResponse_RequestType value);

  public:
  // uint64 node_id = 4;
  void clear_node_id() ;
  ::uint64_t node_id() const;
  void set_node_id(::uint64_t value);

  private:
  ::uint64_t _internal_node_id() const;
  void _internal_set_node_id(::uint64_t value);

  public:
  // uint32 thd_id = 6;
  void clear_thd_id() ;
  ::uint32_t thd_id() const;
  void set_thd_id(::uint32_t value);

  private:
  ::uint32_t _internal_thd_id() const;
  void _internal_set_thd_id(::uint32_t value);

  public:
  // .sundial_rpc.SundialResponse.NodeType node_type = 7;
  void clear_node_type() ;
  ::sundial_rpc::SundialResponse_NodeType node_type() const;
  void set_node_type(::sundial_rpc::SundialResponse_NodeType value);

  private:
  ::sundial_rpc::SundialResponse_NodeType _internal_node_type() const;
  void _internal_set_node_type(::sundial_rpc::SundialResponse_NodeType value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialResponse_TupleData > tuple_data_;
    ::uint64_t txn_id_;
    int response_type_;
    int request_type_;
    ::uint64_t node_id_;
    ::uint32_t thd_id_;
    int node_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};// -------------------------------------------------------------------

class SundialRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sundial_rpc.SundialRequest) */ {
 public:
  inline SundialRequest() : SundialRequest(nullptr) {}
  ~SundialRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SundialRequest(::google::protobuf::internal::ConstantInitialized);

  inline SundialRequest(const SundialRequest& from)
      : SundialRequest(nullptr, from) {}
  SundialRequest(SundialRequest&& from) noexcept
    : SundialRequest() {
    *this = ::std::move(from);
  }

  inline SundialRequest& operator=(const SundialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SundialRequest& operator=(SundialRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SundialRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SundialRequest* internal_default_instance() {
    return reinterpret_cast<const SundialRequest*>(
               &_SundialRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SundialRequest& a, SundialRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SundialRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SundialRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SundialRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SundialRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SundialRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SundialRequest& from) {
    SundialRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SundialRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sundial_rpc.SundialRequest";
  }
  protected:
  explicit SundialRequest(::google::protobuf::Arena* arena);
  SundialRequest(::google::protobuf::Arena* arena, const SundialRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ReadRequest = SundialRequest_ReadRequest;
  using TupleData = SundialRequest_TupleData;
  using NodeData = SundialRequest_NodeData;

  using RequestType = SundialRequest_RequestType;
  static constexpr RequestType DummyReply = SundialRequest_RequestType_DummyReply;
  static constexpr RequestType READ_REQ = SundialRequest_RequestType_READ_REQ;
  static constexpr RequestType PREPARE_REQ = SundialRequest_RequestType_PREPARE_REQ;
  static constexpr RequestType COMMIT_REQ = SundialRequest_RequestType_COMMIT_REQ;
  static constexpr RequestType ABORT_REQ = SundialRequest_RequestType_ABORT_REQ;
  static constexpr RequestType SYS_REQ = SundialRequest_RequestType_SYS_REQ;
  static constexpr RequestType TERMINATE_REQ = SundialRequest_RequestType_TERMINATE_REQ;
  static constexpr RequestType PAXOS_LOG = SundialRequest_RequestType_PAXOS_LOG;
  static constexpr RequestType PAXOS_LOG_FORWARD = SundialRequest_RequestType_PAXOS_LOG_FORWARD;
  static constexpr RequestType PAXOS_LOG_COLOCATE = SundialRequest_RequestType_PAXOS_LOG_COLOCATE;
  static constexpr RequestType PAXOS_LOG_COLOCATE_FORWARD = SundialRequest_RequestType_PAXOS_LOG_COLOCATE_FORWARD;
  static constexpr RequestType PAXOS_REPLICATE = SundialRequest_RequestType_PAXOS_REPLICATE;
  static constexpr RequestType NUM_REQ_TYPES = SundialRequest_RequestType_NUM_REQ_TYPES;
  static inline bool RequestType_IsValid(int value) {
    return SundialRequest_RequestType_IsValid(value);
  }
  static constexpr RequestType RequestType_MIN = SundialRequest_RequestType_RequestType_MIN;
  static constexpr RequestType RequestType_MAX = SundialRequest_RequestType_RequestType_MAX;
  static constexpr int RequestType_ARRAYSIZE = SundialRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
    return SundialRequest_RequestType_descriptor();
  }
  template <typename T>
  static inline const std::string& RequestType_Name(T value) {
    return SundialRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(absl::string_view name, RequestType* value) {
    return SundialRequest_RequestType_Parse(name, value);
  }

  using NodeType = SundialRequest_NodeType;
  static constexpr NodeType COORDINATOR = SundialRequest_NodeType_COORDINATOR;
  static constexpr NodeType PARTICIPANT = SundialRequest_NodeType_PARTICIPANT;
  static constexpr NodeType STORAGE = SundialRequest_NodeType_STORAGE;
  static inline bool NodeType_IsValid(int value) {
    return SundialRequest_NodeType_IsValid(value);
  }
  static constexpr NodeType NodeType_MIN = SundialRequest_NodeType_NodeType_MIN;
  static constexpr NodeType NodeType_MAX = SundialRequest_NodeType_NodeType_MAX;
  static constexpr int NodeType_ARRAYSIZE = SundialRequest_NodeType_NodeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NodeType_descriptor() {
    return SundialRequest_NodeType_descriptor();
  }
  template <typename T>
  static inline const std::string& NodeType_Name(T value) {
    return SundialRequest_NodeType_Name(value);
  }
  static inline bool NodeType_Parse(absl::string_view name, NodeType* value) {
    return SundialRequest_NodeType_Parse(name, value);
  }

  using ResponseType = SundialRequest_ResponseType;
  static constexpr ResponseType RESP_OK = SundialRequest_ResponseType_RESP_OK;
  static constexpr ResponseType RESP_ABORT = SundialRequest_ResponseType_RESP_ABORT;
  static constexpr ResponseType RESP_FAIL = SundialRequest_ResponseType_RESP_FAIL;
  static constexpr ResponseType PREPARED_OK = SundialRequest_ResponseType_PREPARED_OK;
  static constexpr ResponseType PREPARED_OK_RO = SundialRequest_ResponseType_PREPARED_OK_RO;
  static constexpr ResponseType PREPARED_ABORT = SundialRequest_ResponseType_PREPARED_ABORT;
  static constexpr ResponseType ACK = SundialRequest_ResponseType_ACK;
  static constexpr ResponseType SYS_RESP = SundialRequest_ResponseType_SYS_RESP;
  static constexpr ResponseType NUM_RESP_TYPES = SundialRequest_ResponseType_NUM_RESP_TYPES;
  static inline bool ResponseType_IsValid(int value) {
    return SundialRequest_ResponseType_IsValid(value);
  }
  static constexpr ResponseType ResponseType_MIN = SundialRequest_ResponseType_ResponseType_MIN;
  static constexpr ResponseType ResponseType_MAX = SundialRequest_ResponseType_ResponseType_MAX;
  static constexpr int ResponseType_ARRAYSIZE = SundialRequest_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ResponseType_descriptor() {
    return SundialRequest_ResponseType_descriptor();
  }
  template <typename T>
  static inline const std::string& ResponseType_Name(T value) {
    return SundialRequest_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(absl::string_view name, ResponseType* value) {
    return SundialRequest_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kReadRequestsFieldNumber = 3,
    kTupleDataFieldNumber = 4,
    kNodesFieldNumber = 7,
    kTxnIdFieldNumber = 1,
    kLogDataSizeFieldNumber = 5,
    kNodeIdFieldNumber = 6,
    kRequestTypeFieldNumber = 2,
    kNodeTypeFieldNumber = 10,
    kRequestTimeFieldNumber = 8,
    kThreadIdFieldNumber = 9,
    kCoordIdFieldNumber = 11,
    kSemaphoreFieldNumber = 13,
    kTxnStateFieldNumber = 12,
    kThdIdFieldNumber = 14,
    kReceiverIdFieldNumber = 16,
    kForwardMsgFieldNumber = 15,
  };
  // repeated .sundial_rpc.SundialRequest.ReadRequest read_requests = 3;
  int read_requests_size() const;
  private:
  int _internal_read_requests_size() const;

  public:
  void clear_read_requests() ;
  ::sundial_rpc::SundialRequest_ReadRequest* mutable_read_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_ReadRequest >*
      mutable_read_requests();
  private:
  const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>& _internal_read_requests() const;
  ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>* _internal_mutable_read_requests();
  public:
  const ::sundial_rpc::SundialRequest_ReadRequest& read_requests(int index) const;
  ::sundial_rpc::SundialRequest_ReadRequest* add_read_requests();
  const ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_ReadRequest >&
      read_requests() const;
  // repeated .sundial_rpc.SundialRequest.TupleData tuple_data = 4;
  int tuple_data_size() const;
  private:
  int _internal_tuple_data_size() const;

  public:
  void clear_tuple_data() ;
  ::sundial_rpc::SundialRequest_TupleData* mutable_tuple_data(int index);
  ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_TupleData >*
      mutable_tuple_data();
  private:
  const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>& _internal_tuple_data() const;
  ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>* _internal_mutable_tuple_data();
  public:
  const ::sundial_rpc::SundialRequest_TupleData& tuple_data(int index) const;
  ::sundial_rpc::SundialRequest_TupleData* add_tuple_data();
  const ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_TupleData >&
      tuple_data() const;
  // repeated .sundial_rpc.SundialRequest.NodeData nodes = 7;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::sundial_rpc::SundialRequest_NodeData* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_NodeData >*
      mutable_nodes();
  private:
  const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>* _internal_mutable_nodes();
  public:
  const ::sundial_rpc::SundialRequest_NodeData& nodes(int index) const;
  ::sundial_rpc::SundialRequest_NodeData* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_NodeData >&
      nodes() const;
  // uint64 txn_id = 1;
  void clear_txn_id() ;
  ::uint64_t txn_id() const;
  void set_txn_id(::uint64_t value);

  private:
  ::uint64_t _internal_txn_id() const;
  void _internal_set_txn_id(::uint64_t value);

  public:
  // uint64 log_data_size = 5;
  void clear_log_data_size() ;
  ::uint64_t log_data_size() const;
  void set_log_data_size(::uint64_t value);

  private:
  ::uint64_t _internal_log_data_size() const;
  void _internal_set_log_data_size(::uint64_t value);

  public:
  // uint64 node_id = 6;
  void clear_node_id() ;
  ::uint64_t node_id() const;
  void set_node_id(::uint64_t value);

  private:
  ::uint64_t _internal_node_id() const;
  void _internal_set_node_id(::uint64_t value);

  public:
  // .sundial_rpc.SundialRequest.RequestType request_type = 2;
  void clear_request_type() ;
  ::sundial_rpc::SundialRequest_RequestType request_type() const;
  void set_request_type(::sundial_rpc::SundialRequest_RequestType value);

  private:
  ::sundial_rpc::SundialRequest_RequestType _internal_request_type() const;
  void _internal_set_request_type(::sundial_rpc::SundialRequest_RequestType value);

  public:
  // .sundial_rpc.SundialRequest.NodeType node_type = 10;
  void clear_node_type() ;
  ::sundial_rpc::SundialRequest_NodeType node_type() const;
  void set_node_type(::sundial_rpc::SundialRequest_NodeType value);

  private:
  ::sundial_rpc::SundialRequest_NodeType _internal_node_type() const;
  void _internal_set_node_type(::sundial_rpc::SundialRequest_NodeType value);

  public:
  // uint64 request_time = 8;
  void clear_request_time() ;
  ::uint64_t request_time() const;
  void set_request_time(::uint64_t value);

  private:
  ::uint64_t _internal_request_time() const;
  void _internal_set_request_time(::uint64_t value);

  public:
  // uint64 thread_id = 9;
  void clear_thread_id() ;
  ::uint64_t thread_id() const;
  void set_thread_id(::uint64_t value);

  private:
  ::uint64_t _internal_thread_id() const;
  void _internal_set_thread_id(::uint64_t value);

  public:
  // uint64 coord_id = 11;
  void clear_coord_id() ;
  ::uint64_t coord_id() const;
  void set_coord_id(::uint64_t value);

  private:
  ::uint64_t _internal_coord_id() const;
  void _internal_set_coord_id(::uint64_t value);

  public:
  // uint64 semaphore = 13;
  void clear_semaphore() ;
  ::uint64_t semaphore() const;
  void set_semaphore(::uint64_t value);

  private:
  ::uint64_t _internal_semaphore() const;
  void _internal_set_semaphore(::uint64_t value);

  public:
  // int32 txn_state = 12;
  void clear_txn_state() ;
  ::int32_t txn_state() const;
  void set_txn_state(::int32_t value);

  private:
  ::int32_t _internal_txn_state() const;
  void _internal_set_txn_state(::int32_t value);

  public:
  // uint32 thd_id = 14;
  void clear_thd_id() ;
  ::uint32_t thd_id() const;
  void set_thd_id(::uint32_t value);

  private:
  ::uint32_t _internal_thd_id() const;
  void _internal_set_thd_id(::uint32_t value);

  public:
  // uint64 receiver_id = 16;
  void clear_receiver_id() ;
  ::uint64_t receiver_id() const;
  void set_receiver_id(::uint64_t value);

  private:
  ::uint64_t _internal_receiver_id() const;
  void _internal_set_receiver_id(::uint64_t value);

  public:
  // .sundial_rpc.SundialRequest.ResponseType forward_msg = 15;
  void clear_forward_msg() ;
  ::sundial_rpc::SundialRequest_ResponseType forward_msg() const;
  void set_forward_msg(::sundial_rpc::SundialRequest_ResponseType value);

  private:
  ::sundial_rpc::SundialRequest_ResponseType _internal_forward_msg() const;
  void _internal_set_forward_msg(::sundial_rpc::SundialRequest_ResponseType value);

  public:
  // @@protoc_insertion_point(class_scope:sundial_rpc.SundialRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_ReadRequest > read_requests_;
    ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_TupleData > tuple_data_;
    ::google::protobuf::RepeatedPtrField< ::sundial_rpc::SundialRequest_NodeData > nodes_;
    ::uint64_t txn_id_;
    ::uint64_t log_data_size_;
    ::uint64_t node_id_;
    int request_type_;
    int node_type_;
    ::uint64_t request_time_;
    ::uint64_t thread_id_;
    ::uint64_t coord_id_;
    ::uint64_t semaphore_;
    ::int32_t txn_state_;
    ::uint32_t thd_id_;
    ::uint64_t receiver_id_;
    int forward_msg_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sundial_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SundialRequest_ReadRequest

// uint64 key = 1;
inline void SundialRequest_ReadRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_ReadRequest::key() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.ReadRequest.key)
  return _internal_key();
}
inline void SundialRequest_ReadRequest::set_key(::uint64_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.ReadRequest.key)
}
inline ::uint64_t SundialRequest_ReadRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void SundialRequest_ReadRequest::_internal_set_key(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_ = value;
}

// uint64 index_id = 2;
inline void SundialRequest_ReadRequest::clear_index_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_ReadRequest::index_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.ReadRequest.index_id)
  return _internal_index_id();
}
inline void SundialRequest_ReadRequest::set_index_id(::uint64_t value) {
  _internal_set_index_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.ReadRequest.index_id)
}
inline ::uint64_t SundialRequest_ReadRequest::_internal_index_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_id_;
}
inline void SundialRequest_ReadRequest::_internal_set_index_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_id_ = value;
}

// uint64 access_type = 3;
inline void SundialRequest_ReadRequest::clear_access_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.access_type_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_ReadRequest::access_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.ReadRequest.access_type)
  return _internal_access_type();
}
inline void SundialRequest_ReadRequest::set_access_type(::uint64_t value) {
  _internal_set_access_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.ReadRequest.access_type)
}
inline ::uint64_t SundialRequest_ReadRequest::_internal_access_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_type_;
}
inline void SundialRequest_ReadRequest::_internal_set_access_type(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.access_type_ = value;
}

// -------------------------------------------------------------------

// SundialRequest_TupleData

// uint64 key = 1;
inline void SundialRequest_TupleData::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::key() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.key)
  return _internal_key();
}
inline void SundialRequest_TupleData::set_key(::uint64_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.key)
}
inline ::uint64_t SundialRequest_TupleData::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void SundialRequest_TupleData::_internal_set_key(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_ = value;
}

// uint64 table_id = 2;
inline void SundialRequest_TupleData::clear_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.table_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::table_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.table_id)
  return _internal_table_id();
}
inline void SundialRequest_TupleData::set_table_id(::uint64_t value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.table_id)
}
inline ::uint64_t SundialRequest_TupleData::_internal_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.table_id_;
}
inline void SundialRequest_TupleData::_internal_set_table_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.table_id_ = value;
}

// uint64 size = 3;
inline void SundialRequest_TupleData::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::size() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.size)
  return _internal_size();
}
inline void SundialRequest_TupleData::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.size)
}
inline ::uint64_t SundialRequest_TupleData::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void SundialRequest_TupleData::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// bytes data = 4;
inline void SundialRequest_TupleData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SundialRequest_TupleData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SundialRequest_TupleData::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.data)
}
inline std::string* SundialRequest_TupleData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialRequest.TupleData.data)
  return _s;
}
inline const std::string& SundialRequest_TupleData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void SundialRequest_TupleData::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SundialRequest_TupleData::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SundialRequest_TupleData::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sundial_rpc.SundialRequest.TupleData.data)
  return _impl_.data_.Release();
}
inline void SundialRequest_TupleData::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sundial_rpc.SundialRequest.TupleData.data)
}

// uint64 access_type = 5;
inline void SundialRequest_TupleData::clear_access_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.access_type_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::access_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.access_type)
  return _internal_access_type();
}
inline void SundialRequest_TupleData::set_access_type(::uint64_t value) {
  _internal_set_access_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.access_type)
}
inline ::uint64_t SundialRequest_TupleData::_internal_access_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_type_;
}
inline void SundialRequest_TupleData::_internal_set_access_type(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.access_type_ = value;
}

// uint64 version = 6;
inline void SundialRequest_TupleData::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::version() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.version)
  return _internal_version();
}
inline void SundialRequest_TupleData::set_version(::uint64_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.version)
}
inline ::uint64_t SundialRequest_TupleData::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void SundialRequest_TupleData::_internal_set_version(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_ = value;
}

// uint64 index_id = 7;
inline void SundialRequest_TupleData::clear_index_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_TupleData::index_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.TupleData.index_id)
  return _internal_index_id();
}
inline void SundialRequest_TupleData::set_index_id(::uint64_t value) {
  _internal_set_index_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.TupleData.index_id)
}
inline ::uint64_t SundialRequest_TupleData::_internal_index_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_id_;
}
inline void SundialRequest_TupleData::_internal_set_index_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_id_ = value;
}

// -------------------------------------------------------------------

// SundialRequest_NodeData

// uint64 nid = 1;
inline void SundialRequest_NodeData::clear_nid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nid_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest_NodeData::nid() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.NodeData.nid)
  return _internal_nid();
}
inline void SundialRequest_NodeData::set_nid(::uint64_t value) {
  _internal_set_nid(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.NodeData.nid)
}
inline ::uint64_t SundialRequest_NodeData::_internal_nid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nid_;
}
inline void SundialRequest_NodeData::_internal_set_nid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nid_ = value;
}

// -------------------------------------------------------------------

// SundialRequest

// uint64 txn_id = 1;
inline void SundialRequest::clear_txn_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.txn_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::txn_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.txn_id)
  return _internal_txn_id();
}
inline void SundialRequest::set_txn_id(::uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.txn_id)
}
inline ::uint64_t SundialRequest::_internal_txn_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.txn_id_;
}
inline void SundialRequest::_internal_set_txn_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.txn_id_ = value;
}

// .sundial_rpc.SundialRequest.RequestType request_type = 2;
inline void SundialRequest::clear_request_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.request_type_ = 0;
}
inline ::sundial_rpc::SundialRequest_RequestType SundialRequest::request_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.request_type)
  return _internal_request_type();
}
inline void SundialRequest::set_request_type(::sundial_rpc::SundialRequest_RequestType value) {
  _internal_set_request_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.request_type)
}
inline ::sundial_rpc::SundialRequest_RequestType SundialRequest::_internal_request_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialRequest_RequestType>(_impl_.request_type_);
}
inline void SundialRequest::_internal_set_request_type(::sundial_rpc::SundialRequest_RequestType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.request_type_ = value;
}

// repeated .sundial_rpc.SundialRequest.ReadRequest read_requests = 3;
inline int SundialRequest::_internal_read_requests_size() const {
  return _internal_read_requests().size();
}
inline int SundialRequest::read_requests_size() const {
  return _internal_read_requests_size();
}
inline void SundialRequest::clear_read_requests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.read_requests_.Clear();
}
inline ::sundial_rpc::SundialRequest_ReadRequest* SundialRequest::mutable_read_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialRequest.read_requests)
  return _internal_mutable_read_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>* SundialRequest::mutable_read_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sundial_rpc.SundialRequest.read_requests)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_read_requests();
}
inline const ::sundial_rpc::SundialRequest_ReadRequest& SundialRequest::read_requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.read_requests)
  return _internal_read_requests().Get(index);
}
inline ::sundial_rpc::SundialRequest_ReadRequest* SundialRequest::add_read_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sundial_rpc::SundialRequest_ReadRequest* _add = _internal_mutable_read_requests()->Add();
  // @@protoc_insertion_point(field_add:sundial_rpc.SundialRequest.read_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>& SundialRequest::read_requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sundial_rpc.SundialRequest.read_requests)
  return _internal_read_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>&
SundialRequest::_internal_read_requests() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.read_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_ReadRequest>*
SundialRequest::_internal_mutable_read_requests() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.read_requests_;
}

// repeated .sundial_rpc.SundialRequest.TupleData tuple_data = 4;
inline int SundialRequest::_internal_tuple_data_size() const {
  return _internal_tuple_data().size();
}
inline int SundialRequest::tuple_data_size() const {
  return _internal_tuple_data_size();
}
inline void SundialRequest::clear_tuple_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tuple_data_.Clear();
}
inline ::sundial_rpc::SundialRequest_TupleData* SundialRequest::mutable_tuple_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialRequest.tuple_data)
  return _internal_mutable_tuple_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>* SundialRequest::mutable_tuple_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sundial_rpc.SundialRequest.tuple_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tuple_data();
}
inline const ::sundial_rpc::SundialRequest_TupleData& SundialRequest::tuple_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.tuple_data)
  return _internal_tuple_data().Get(index);
}
inline ::sundial_rpc::SundialRequest_TupleData* SundialRequest::add_tuple_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sundial_rpc::SundialRequest_TupleData* _add = _internal_mutable_tuple_data()->Add();
  // @@protoc_insertion_point(field_add:sundial_rpc.SundialRequest.tuple_data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>& SundialRequest::tuple_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sundial_rpc.SundialRequest.tuple_data)
  return _internal_tuple_data();
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>&
SundialRequest::_internal_tuple_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tuple_data_;
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_TupleData>*
SundialRequest::_internal_mutable_tuple_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tuple_data_;
}

// uint64 log_data_size = 5;
inline void SundialRequest::clear_log_data_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_data_size_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::log_data_size() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.log_data_size)
  return _internal_log_data_size();
}
inline void SundialRequest::set_log_data_size(::uint64_t value) {
  _internal_set_log_data_size(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.log_data_size)
}
inline ::uint64_t SundialRequest::_internal_log_data_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_data_size_;
}
inline void SundialRequest::_internal_set_log_data_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_data_size_ = value;
}

// uint64 node_id = 6;
inline void SundialRequest::clear_node_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::node_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.node_id)
  return _internal_node_id();
}
inline void SundialRequest::set_node_id(::uint64_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.node_id)
}
inline ::uint64_t SundialRequest::_internal_node_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_id_;
}
inline void SundialRequest::_internal_set_node_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_id_ = value;
}

// repeated .sundial_rpc.SundialRequest.NodeData nodes = 7;
inline int SundialRequest::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int SundialRequest::nodes_size() const {
  return _internal_nodes_size();
}
inline void SundialRequest::clear_nodes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nodes_.Clear();
}
inline ::sundial_rpc::SundialRequest_NodeData* SundialRequest::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialRequest.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>* SundialRequest::mutable_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sundial_rpc.SundialRequest.nodes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_nodes();
}
inline const ::sundial_rpc::SundialRequest_NodeData& SundialRequest::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.nodes)
  return _internal_nodes().Get(index);
}
inline ::sundial_rpc::SundialRequest_NodeData* SundialRequest::add_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sundial_rpc::SundialRequest_NodeData* _add = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add:sundial_rpc.SundialRequest.nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>& SundialRequest::nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sundial_rpc.SundialRequest.nodes)
  return _internal_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>&
SundialRequest::_internal_nodes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialRequest_NodeData>*
SundialRequest::_internal_mutable_nodes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.nodes_;
}

// uint64 request_time = 8;
inline void SundialRequest::clear_request_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.request_time_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::request_time() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.request_time)
  return _internal_request_time();
}
inline void SundialRequest::set_request_time(::uint64_t value) {
  _internal_set_request_time(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.request_time)
}
inline ::uint64_t SundialRequest::_internal_request_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.request_time_;
}
inline void SundialRequest::_internal_set_request_time(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.request_time_ = value;
}

// uint64 thread_id = 9;
inline void SundialRequest::clear_thread_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.thread_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::thread_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.thread_id)
  return _internal_thread_id();
}
inline void SundialRequest::set_thread_id(::uint64_t value) {
  _internal_set_thread_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.thread_id)
}
inline ::uint64_t SundialRequest::_internal_thread_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thread_id_;
}
inline void SundialRequest::_internal_set_thread_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.thread_id_ = value;
}

// .sundial_rpc.SundialRequest.NodeType node_type = 10;
inline void SundialRequest::clear_node_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_type_ = 0;
}
inline ::sundial_rpc::SundialRequest_NodeType SundialRequest::node_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.node_type)
  return _internal_node_type();
}
inline void SundialRequest::set_node_type(::sundial_rpc::SundialRequest_NodeType value) {
  _internal_set_node_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.node_type)
}
inline ::sundial_rpc::SundialRequest_NodeType SundialRequest::_internal_node_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialRequest_NodeType>(_impl_.node_type_);
}
inline void SundialRequest::_internal_set_node_type(::sundial_rpc::SundialRequest_NodeType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_type_ = value;
}

// uint64 coord_id = 11;
inline void SundialRequest::clear_coord_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.coord_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::coord_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.coord_id)
  return _internal_coord_id();
}
inline void SundialRequest::set_coord_id(::uint64_t value) {
  _internal_set_coord_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.coord_id)
}
inline ::uint64_t SundialRequest::_internal_coord_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.coord_id_;
}
inline void SundialRequest::_internal_set_coord_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.coord_id_ = value;
}

// int32 txn_state = 12;
inline void SundialRequest::clear_txn_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.txn_state_ = 0;
}
inline ::int32_t SundialRequest::txn_state() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.txn_state)
  return _internal_txn_state();
}
inline void SundialRequest::set_txn_state(::int32_t value) {
  _internal_set_txn_state(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.txn_state)
}
inline ::int32_t SundialRequest::_internal_txn_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.txn_state_;
}
inline void SundialRequest::_internal_set_txn_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.txn_state_ = value;
}

// uint64 semaphore = 13;
inline void SundialRequest::clear_semaphore() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.semaphore_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::semaphore() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.semaphore)
  return _internal_semaphore();
}
inline void SundialRequest::set_semaphore(::uint64_t value) {
  _internal_set_semaphore(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.semaphore)
}
inline ::uint64_t SundialRequest::_internal_semaphore() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.semaphore_;
}
inline void SundialRequest::_internal_set_semaphore(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.semaphore_ = value;
}

// uint32 thd_id = 14;
inline void SundialRequest::clear_thd_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.thd_id_ = 0u;
}
inline ::uint32_t SundialRequest::thd_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.thd_id)
  return _internal_thd_id();
}
inline void SundialRequest::set_thd_id(::uint32_t value) {
  _internal_set_thd_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.thd_id)
}
inline ::uint32_t SundialRequest::_internal_thd_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thd_id_;
}
inline void SundialRequest::_internal_set_thd_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.thd_id_ = value;
}

// .sundial_rpc.SundialRequest.ResponseType forward_msg = 15;
inline void SundialRequest::clear_forward_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.forward_msg_ = 0;
}
inline ::sundial_rpc::SundialRequest_ResponseType SundialRequest::forward_msg() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.forward_msg)
  return _internal_forward_msg();
}
inline void SundialRequest::set_forward_msg(::sundial_rpc::SundialRequest_ResponseType value) {
  _internal_set_forward_msg(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.forward_msg)
}
inline ::sundial_rpc::SundialRequest_ResponseType SundialRequest::_internal_forward_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialRequest_ResponseType>(_impl_.forward_msg_);
}
inline void SundialRequest::_internal_set_forward_msg(::sundial_rpc::SundialRequest_ResponseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.forward_msg_ = value;
}

// uint64 receiver_id = 16;
inline void SundialRequest::clear_receiver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.receiver_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialRequest::receiver_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialRequest.receiver_id)
  return _internal_receiver_id();
}
inline void SundialRequest::set_receiver_id(::uint64_t value) {
  _internal_set_receiver_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialRequest.receiver_id)
}
inline ::uint64_t SundialRequest::_internal_receiver_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.receiver_id_;
}
inline void SundialRequest::_internal_set_receiver_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.receiver_id_ = value;
}

// -------------------------------------------------------------------

// SundialResponse_TupleData

// uint64 key = 1;
inline void SundialResponse_TupleData::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::key() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.key)
  return _internal_key();
}
inline void SundialResponse_TupleData::set_key(::uint64_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.key)
}
inline ::uint64_t SundialResponse_TupleData::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void SundialResponse_TupleData::_internal_set_key(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_ = value;
}

// uint64 table_id = 2;
inline void SundialResponse_TupleData::clear_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.table_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::table_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.table_id)
  return _internal_table_id();
}
inline void SundialResponse_TupleData::set_table_id(::uint64_t value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.table_id)
}
inline ::uint64_t SundialResponse_TupleData::_internal_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.table_id_;
}
inline void SundialResponse_TupleData::_internal_set_table_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.table_id_ = value;
}

// uint64 size = 3;
inline void SundialResponse_TupleData::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::size() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.size)
  return _internal_size();
}
inline void SundialResponse_TupleData::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.size)
}
inline ::uint64_t SundialResponse_TupleData::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void SundialResponse_TupleData::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// bytes data = 4;
inline void SundialResponse_TupleData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SundialResponse_TupleData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SundialResponse_TupleData::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.data)
}
inline std::string* SundialResponse_TupleData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialResponse.TupleData.data)
  return _s;
}
inline const std::string& SundialResponse_TupleData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void SundialResponse_TupleData::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SundialResponse_TupleData::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SundialResponse_TupleData::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sundial_rpc.SundialResponse.TupleData.data)
  return _impl_.data_.Release();
}
inline void SundialResponse_TupleData::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sundial_rpc.SundialResponse.TupleData.data)
}

// uint64 access_type = 5;
inline void SundialResponse_TupleData::clear_access_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.access_type_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::access_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.access_type)
  return _internal_access_type();
}
inline void SundialResponse_TupleData::set_access_type(::uint64_t value) {
  _internal_set_access_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.access_type)
}
inline ::uint64_t SundialResponse_TupleData::_internal_access_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.access_type_;
}
inline void SundialResponse_TupleData::_internal_set_access_type(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.access_type_ = value;
}

// uint64 version = 6;
inline void SundialResponse_TupleData::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::version() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.version)
  return _internal_version();
}
inline void SundialResponse_TupleData::set_version(::uint64_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.version)
}
inline ::uint64_t SundialResponse_TupleData::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void SundialResponse_TupleData::_internal_set_version(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_ = value;
}

// uint64 index_id = 7;
inline void SundialResponse_TupleData::clear_index_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse_TupleData::index_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.TupleData.index_id)
  return _internal_index_id();
}
inline void SundialResponse_TupleData::set_index_id(::uint64_t value) {
  _internal_set_index_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.TupleData.index_id)
}
inline ::uint64_t SundialResponse_TupleData::_internal_index_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_id_;
}
inline void SundialResponse_TupleData::_internal_set_index_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_id_ = value;
}

// -------------------------------------------------------------------

// SundialResponse

// uint64 txn_id = 1;
inline void SundialResponse::clear_txn_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.txn_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse::txn_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.txn_id)
  return _internal_txn_id();
}
inline void SundialResponse::set_txn_id(::uint64_t value) {
  _internal_set_txn_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.txn_id)
}
inline ::uint64_t SundialResponse::_internal_txn_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.txn_id_;
}
inline void SundialResponse::_internal_set_txn_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.txn_id_ = value;
}

// .sundial_rpc.SundialResponse.ResponseType response_type = 2;
inline void SundialResponse::clear_response_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.response_type_ = 0;
}
inline ::sundial_rpc::SundialResponse_ResponseType SundialResponse::response_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.response_type)
  return _internal_response_type();
}
inline void SundialResponse::set_response_type(::sundial_rpc::SundialResponse_ResponseType value) {
  _internal_set_response_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.response_type)
}
inline ::sundial_rpc::SundialResponse_ResponseType SundialResponse::_internal_response_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialResponse_ResponseType>(_impl_.response_type_);
}
inline void SundialResponse::_internal_set_response_type(::sundial_rpc::SundialResponse_ResponseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.response_type_ = value;
}

// repeated .sundial_rpc.SundialResponse.TupleData tuple_data = 3;
inline int SundialResponse::_internal_tuple_data_size() const {
  return _internal_tuple_data().size();
}
inline int SundialResponse::tuple_data_size() const {
  return _internal_tuple_data_size();
}
inline void SundialResponse::clear_tuple_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tuple_data_.Clear();
}
inline ::sundial_rpc::SundialResponse_TupleData* SundialResponse::mutable_tuple_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sundial_rpc.SundialResponse.tuple_data)
  return _internal_mutable_tuple_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>* SundialResponse::mutable_tuple_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sundial_rpc.SundialResponse.tuple_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tuple_data();
}
inline const ::sundial_rpc::SundialResponse_TupleData& SundialResponse::tuple_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.tuple_data)
  return _internal_tuple_data().Get(index);
}
inline ::sundial_rpc::SundialResponse_TupleData* SundialResponse::add_tuple_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::sundial_rpc::SundialResponse_TupleData* _add = _internal_mutable_tuple_data()->Add();
  // @@protoc_insertion_point(field_add:sundial_rpc.SundialResponse.tuple_data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>& SundialResponse::tuple_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sundial_rpc.SundialResponse.tuple_data)
  return _internal_tuple_data();
}
inline const ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>&
SundialResponse::_internal_tuple_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tuple_data_;
}
inline ::google::protobuf::RepeatedPtrField<::sundial_rpc::SundialResponse_TupleData>*
SundialResponse::_internal_mutable_tuple_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tuple_data_;
}

// uint64 node_id = 4;
inline void SundialResponse::clear_node_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_id_ = ::uint64_t{0u};
}
inline ::uint64_t SundialResponse::node_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.node_id)
  return _internal_node_id();
}
inline void SundialResponse::set_node_id(::uint64_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.node_id)
}
inline ::uint64_t SundialResponse::_internal_node_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_id_;
}
inline void SundialResponse::_internal_set_node_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_id_ = value;
}

// .sundial_rpc.SundialResponse.RequestType request_type = 5;
inline void SundialResponse::clear_request_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.request_type_ = 0;
}
inline ::sundial_rpc::SundialResponse_RequestType SundialResponse::request_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.request_type)
  return _internal_request_type();
}
inline void SundialResponse::set_request_type(::sundial_rpc::SundialResponse_RequestType value) {
  _internal_set_request_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.request_type)
}
inline ::sundial_rpc::SundialResponse_RequestType SundialResponse::_internal_request_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialResponse_RequestType>(_impl_.request_type_);
}
inline void SundialResponse::_internal_set_request_type(::sundial_rpc::SundialResponse_RequestType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.request_type_ = value;
}

// uint32 thd_id = 6;
inline void SundialResponse::clear_thd_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.thd_id_ = 0u;
}
inline ::uint32_t SundialResponse::thd_id() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.thd_id)
  return _internal_thd_id();
}
inline void SundialResponse::set_thd_id(::uint32_t value) {
  _internal_set_thd_id(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.thd_id)
}
inline ::uint32_t SundialResponse::_internal_thd_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thd_id_;
}
inline void SundialResponse::_internal_set_thd_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.thd_id_ = value;
}

// .sundial_rpc.SundialResponse.NodeType node_type = 7;
inline void SundialResponse::clear_node_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_type_ = 0;
}
inline ::sundial_rpc::SundialResponse_NodeType SundialResponse::node_type() const {
  // @@protoc_insertion_point(field_get:sundial_rpc.SundialResponse.node_type)
  return _internal_node_type();
}
inline void SundialResponse::set_node_type(::sundial_rpc::SundialResponse_NodeType value) {
  _internal_set_node_type(value);
  // @@protoc_insertion_point(field_set:sundial_rpc.SundialResponse.node_type)
}
inline ::sundial_rpc::SundialResponse_NodeType SundialResponse::_internal_node_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::sundial_rpc::SundialResponse_NodeType>(_impl_.node_type_);
}
inline void SundialResponse::_internal_set_node_type(::sundial_rpc::SundialResponse_NodeType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.node_type_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace sundial_rpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sundial_rpc::SundialRequest_RequestType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialRequest_RequestType>() {
  return ::sundial_rpc::SundialRequest_RequestType_descriptor();
}
template <>
struct is_proto_enum<::sundial_rpc::SundialRequest_NodeType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialRequest_NodeType>() {
  return ::sundial_rpc::SundialRequest_NodeType_descriptor();
}
template <>
struct is_proto_enum<::sundial_rpc::SundialRequest_ResponseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialRequest_ResponseType>() {
  return ::sundial_rpc::SundialRequest_ResponseType_descriptor();
}
template <>
struct is_proto_enum<::sundial_rpc::SundialResponse_RequestType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialResponse_RequestType>() {
  return ::sundial_rpc::SundialResponse_RequestType_descriptor();
}
template <>
struct is_proto_enum<::sundial_rpc::SundialResponse_ResponseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialResponse_ResponseType>() {
  return ::sundial_rpc::SundialResponse_ResponseType_descriptor();
}
template <>
struct is_proto_enum<::sundial_rpc::SundialResponse_NodeType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sundial_rpc::SundialResponse_NodeType>() {
  return ::sundial_rpc::SundialResponse_NodeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_sundial_2eproto_2epb_2eh
